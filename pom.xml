<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.aiblockchain</groupId>
  <artifactId>aiblockchain-rest</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>AI BLOCKCHAIN REST SERVICES</name>
  <description>AI Block Chain Restful Services Demo</description>
  
	<!--<repositories>
	  <repository>
	    <id>data-local</id>
	    <name>data</name>
	    <url>file://${project.basedir}/repo</url>
	  </repository>
	</repositories>-->
	  
	<properties>
		<jdk.version>1.8</jdk.version>
		<junit.version>4.11</junit.version>
		<log4j.version>1.2.17</log4j.version>
	</properties>
		  
	<dependencies>
		<!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
		<!-- <dependency>
		    <groupId>io.netty</groupId>
		    <artifactId>netty-all</artifactId>
		    <version>4.0.25.Final</version>
		</dependency> -->
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		    <version>4.5.2</version>
		</dependency>			
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
		 <dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-core</artifactId>
		    <version>4.3.7.RELEASE</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context</artifactId>
		    <version>4.3.7.RELEASE</version>
		</dependency>
		<dependency>
		     <groupId>org.springframework</groupId>
		     <artifactId>spring-beans</artifactId>
		     <version>4.3.7.RELEASE</version>
		 </dependency>		 							
		<dependency>
		    <groupId>org.glassfish.jersey.containers</groupId>
		    <artifactId>jersey-container-netty-http</artifactId>
		    <version>2.25.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server -->
		<dependency>
		    <groupId>org.glassfish.jersey.core</groupId>
		    <artifactId>jersey-server</artifactId>
		    <version>2.25.1</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api -->
		<!--  <dependency>
		    <groupId>javax.ws.rs</groupId>
		    <artifactId>javax.ws.rs-api</artifactId>
		    <version>2.0</version>
		</dependency>-->
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-common -->
		<dependency>
		    <groupId>org.glassfish.jersey.core</groupId>
		    <artifactId>jersey-common</artifactId>
		    <version>2.25.1</version>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.media</groupId>
		    <artifactId>jersey-media-jaxb</artifactId>
		    <version>2.25.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson -->
		<dependency>
		    <groupId>org.glassfish.jersey.media</groupId>
		    <artifactId>jersey-media-json-jackson</artifactId>
		    <version>2.25.1</version>
		</dependency>	
		<!-- https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-multipart -->
		<dependency>
		    <groupId>org.glassfish.jersey.media</groupId>
		    <artifactId>jersey-media-multipart</artifactId>
		    <version>2.25.1</version>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.media</groupId>
		    <artifactId>jersey-media-moxy</artifactId>
		    <version>2.25.1</version>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.media</groupId>
		    <artifactId>jersey-media-json-jettison</artifactId>
		    <version>2.25.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3 -->
		<dependency>
		    <groupId>com.amazonaws</groupId>
		    <artifactId>aws-java-sdk-s3</artifactId>
		    <version>1.11.109</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>4.0.0-b03</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>6.0.6</version>
		</dependency>				
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<!-- <dependency>
	        <groupId>org.apache.logging.log4j</groupId>
	        <artifactId>log4j-slf4j-impl</artifactId>
	        <version>2.8.1</version>
	        <scope>runtime</scope>
	    </dependency> -->		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>		
		<!-- 
		<dependency>
		 	<groupId>com.devsprint.jersey.api</groupId>
		 	<artifactId>jersey-netty-container</artifactId>
		 	<version>0.0.7-SNAPSHOT</version>
		</dependency>	
		 
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		    <artifactId>jersey-server</artifactId>
		    <version>1.11</version>
		</dependency>
		
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>1.19.3</version>
		</dependency>	
		 -->		 
	</dependencies>  
	
	<build>
		<finalName>aiblockchain-rest</finalName>
		<plugins>			
			<!-- download source code in Eclipse, best practice -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
				</configuration>
			</plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		    <plugin>
		    
		      <!-- Build an executable JAR -->
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-jar-plugin</artifactId>
		      <version>3.0.2</version>
		      <configuration>
		      	<!-- DO NOT include log4j.properties file in your Jar -->
				  <excludes>
					<exclude>**/log4j.properties</exclude>
				</excludes>
		        <archive>
		          <manifest>
		            <addClasspath>true</addClasspath>
		            <classpathPrefix>lib/</classpathPrefix>
		            <mainClass>com.aiblockchain.server.NettyServerMain</mainClass>
		          </manifest>
		        </archive>
		      </configuration>
		    </plugin>	
		    
			<!-- Copy project dependency -->
			<!--
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
				  <execution>
					<id>copy-dependencies</id>
					<phase>package</phase>
					<goals>
						<goal>copy-dependencies</goal>
					</goals>
					<configuration>
					   exclude junit, we need runtime dependency only 
					  <includeScope>runtime</includeScope>
					  <outputDirectory>${project.build.directory}/dependency-jars/</outputDirectory>
					</configuration>
				  </execution>
				</executions>
			</plugin>
			-->	
			
			<!-- Maven Assembly Plugin -->
<!-- 			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					get all project dependencies
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					MainClass in mainfest make a executable jar
					<archive>
					  <manifest>
					  	<addClasspath>true</addClasspath> 
						<mainClass>com.aiblockchain.server.NettyServerMain</mainClass>
					  </manifest>
	                  	<manifestEntries>
	                        <Class-Path>.</Class-Path> need to add current directory to classpath properties files can be found
	                    </manifestEntries>					  
					</archive>
				</configuration>
				<executions>
				  <execution>
					<id>make-assembly</id>
                    bind to the packaging phase
					<phase>package</phase>
					<goals>
						<goal>single</goal>
					</goals>
				  </execution>
				</executions>
			</plugin>	 -->
			
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-dependency-plugin</artifactId>
			    <executions>
			        <execution>
			            <id>copy-dependencies</id>
			            <phase>package</phase>
			            <goals>
			                <goal>copy-dependencies</goal>
			            </goals>
			            <configuration>
			            	<includeScope>runtime</includeScope>
			                <outputDirectory>${project.build.directory}/lib</outputDirectory>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.10</version>
				<configuration>
					<imageName>aiblockchain-rest</imageName>
					<imageTags>
			           <!-- <imageTag>${project.version}</imageTag> -->
			           <imageTag>latest</imageTag>
			        </imageTags>
					<baseImage>java:8</baseImage>
					<entryPoint>["java", "-cp", "target/lib/*:target/aiblockchain-rest.jar", "-Dlog4j.debug", "-Dlog4j.configuration=log4j.properties", "-jar", "/apps/${project.build.finalName}.jar", "5000"]</entryPoint>
					<pushImage>false</pushImage>
					<!-- copy the service's jar file from target into the root directory of the image -->
					<resources>
						<resource>
							<targetPath>/apps/</targetPath>
							<directory>${project.build.directory}</directory>
				            <includes>
				                <include>${project.build.directory}/log4j.properties</include>
                                <include>${project.build.finalName}.jar</include>				                
				            </includes>							
							<excludes>
							     <exclude>*.iml</exclude>
							     <exclude>pom.xml</exclude>
							     <!-- <exclude>target/**/*</exclude> -->
							</excludes>
						</resource>
					</resources>
				</configuration>
			</plugin>
			
<!-- 	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-jar-plugin</artifactId>
	            <version>3.0.2</version>
	            <configuration>
	            	<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
	                <archive>
	                    <index>true</index>
	                    <manifest>
	                        <addClasspath>true</addClasspath>
	                        <mainClass>com.aiblockchain.server.NettyServerMain</mainClass>
	                    </manifest>
	                    <manifestEntries>
	                        <mode>development</mode>
	                        <url>${pom.url}</url>
	                        <key>value</key>
	                        <Class-Path>.</Class-Path>
	                    </manifestEntries>
	                </archive>
	            </configuration>
	        </plugin> -->
        			
			<!-- 
		      <plugin>
		       <groupId>org.codehaus.mojo</groupId>
		       <artifactId>exec-maven-plugin</artifactId>
		       <version>1.1.1</version>
		       <executions>
		        <execution>
		         <phase>test</phase>
		         <goals>
		          <goal>java</goal>
		         </goals>
		         <configuration>
		          <mainClass>com.aiblockchain.NettyServerMain</mainClass>
		          <arguments>
		           <argument>netty</argument>
		           <argument>5000</argument>
		          </arguments>
		         </configuration>
		        </execution>
		       </executions>
		      </plugin>	
		       -->	
		       
		    <!-- Need this to run in docker -->
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-shade-plugin</artifactId>
	            <version>2.4.3</version>
	            <executions>
	                <execution>
	                    <phase>package</phase>
	                    <goals>
	                        <goal>shade</goal>
	                    </goals>
				        <configuration>
				          <filters>
				            <filter>
				              <artifact>*:*</artifact>
				              <excludes>
				                <exclude>META-INF/*.SF</exclude>
				                <exclude>META-INF/*.DSA</exclude>
				                <exclude>META-INF/*.RSA</exclude>
				              </excludes>
				            </filter>
				          </filters>
			              <transformers>
			                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
			                  <resource>META-INF/spring.handlers</resource>
			                </transformer>
			                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
			                  <resource>META-INF/spring.schemas</resource>
			                </transformer>
			              </transformers>				          
				        </configuration>
	                </execution>
	            </executions>
	        </plugin>		       				    		
		</plugins>	
	</build>
</project>